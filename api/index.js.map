{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/Header.tsx", "../app/routes/sign-up/sso-callback.tsx", "../app/routes/ssr-user-demo.tsx", "../app/routes/sign-in/$.tsx", "../app/routes/sign-up/$.tsx", "../app/routes/ssr-demo.tsx", "../app/routes/user/$.tsx", "../app/routes/index.tsx", "../app/components/Spinner.tsx", "../app/components/dashboard/KPIItem.tsx", "../app/constants/data.ts", "../app/components/dashboard/StatsCard.tsx", "../app/components/dashboard/ChatBoard.tsx", "../app/components/dashboard/ChatItem.tsx", "../app/components/dashboard/ChatLoader.tsx", "../app/components/Modal.tsx", "../app/components/dashboard/KPIEditModal.tsx", "../app/components/dashboard/StepWizardModal.tsx", "../app/components/dashboard/SessionListModal.tsx", "../app/utils/api.ts", "../utils/getActionSteps.ts", "../utils/indexStore.ts", "../utils/prompts.ts", "../scripts/docs.json", "../app/utils/index.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { renderToString } from \"react-dom/server\";\r\nimport type { EntryContext } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  const markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\r\n\r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n  return new Response(\"<!DOCTYPE html>\" + markup, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import type { DataFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, isRouteErrorResponse, useLoaderData, useRouteError } from \"@remix-run/react\";\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\nimport { ClerkApp, ClerkCatchBoundary } from \"@clerk/remix\";\nimport {\n  RemixRootDefaultCatchBoundary,\n  RemixRootDefaultErrorBoundary } from\n\"@remix-run/react/dist/errorBoundaries\";\nimport Header from \"~/components/Header\";\nimport { StepsProvider } from \"react-step-builder\";\n\nimport tailwindstyle from \"~/tailwind.css\";\nimport styles from \"~/styles/shared.css\";\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Sherlock\" };\n};\n\nexport const links = () => {\n  return [\n  { rel: \"stylesheet\", href: \"https://unpkg.com/modern-css-reset@1.4.0/dist/reset.min.css\" },\n  { rel: \"stylesheet\", href: styles },\n  { rel: \"stylesheet\", href: tailwindstyle }];\n\n};\n\nexport const CatchBoundary = ClerkCatchBoundary();\n\nexport const loader = (args: DataFunctionArgs) => {\n  return rootAuthLoader(\n    args,\n    ({ request }) => {\n      const { userId, sessionId, getToken } = request.auth;\n      console.log(\"Root loader auth:\", { userId, sessionId, getToken });\n      return {\n        message: `Hello from the root loader :)`,\n        ENV: {\n          OPENAI_MODEL: process.env.OPENAI_MODEL,\n          OPENAI_API_KEY: process.env.OPENAI_API_KEY,\n          IN_MEMORY_SEARCH_INDEX_URL: process.env.IN_MEMORY_SEARCH_INDEX_URL\n        }\n      };\n    },\n    { loadUser: true }\n  );\n};\n\ndeclare global {\n  interface Window {ENV: any;}\n}\n\nfunction App() {\n\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Header />\r\n        <StepsProvider>\r\n          <Outlet />\r\n        </StepsProvider>\r\n        <ScrollRestoration />\r\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(\n              data.ENV\n            )}`\n          }} />\n        \r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>);\n\n}\n\nexport const ErrorBoundary = () => {\n  const error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    const { __clerk_ssr_interstitial_html } = error?.data?.clerkState?.__internal_clerk_state || {};\n    console.log(__clerk_ssr_interstitial_html);\n    if (__clerk_ssr_interstitial_html) {\n      return <html dangerouslySetInnerHTML={{ __html: __clerk_ssr_interstitial_html }} />;\n    }\n    //  Current CatchBoundary Component\n    return <RemixRootDefaultCatchBoundary />;\n  } else if (error instanceof Error) {\n    return <RemixRootDefaultErrorBoundary error={error} />;\n  } else {\n    let errorString =\n    error == null ?\n    \"Unknown Error\" :\n    typeof error === \"object\" && \"toString\" in error ?\n    error.toString() :\n    JSON.stringify(error);\n    return <RemixRootDefaultErrorBoundary error={new Error(errorString)} />;\n  }\n};\n\nexport default ClerkApp(App);", "import { SignedIn, SignedOut, UserButton } from \"@clerk/remix\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\n// Header component using <SignedIn> & <SignedOut>.\r\n//\r\n// The SignedIn and SignedOut components are used to control rendering depending\r\n// on whether or not a visitor is signed in.\r\n//\r\n// https://docs.clerk.dev/frontend/react/signedin-and-signedout\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"left\">\r\n      <Link to=\"/\" className=\"logo\">\r\n        <img src=\"/logo.svg\" width=\"32\" height=\"32\" alt=\"Logo\" />\r\n        <span className=\"appName\">Sherlock</span>\r\n      </Link>\r\n    </div>\r\n    <div className=\"right\">\r\n      <SignedOut>\r\n        <Link to=\"/sign-up\">Sign up</Link>\r\n      </SignedOut>\r\n      <SignedOut>\r\n        <Link to=\"/sign-in\">Sign in</Link>\r\n      </SignedOut>\r\n      <SignedIn>\r\n        <UserButton userProfileUrl=\"/user\" afterSignOutUrl=\"/\" />\r\n      </SignedIn>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n", "// ** React Import\nimport { useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"@remix-run/react\";\nimport { LinksFunction } from \"@remix-run/react/dist/routeModules\";\n\n// ** Clerk Import\nimport { useSignUp } from \"@clerk/remix\";\n\n// ** Styles Import\nimport styles from \"~/styles/sso-callback.css\";\n\n// Import styles\nexport const links: LinksFunction = () => [\n{ rel: 'stylesheet', href: styles }];\n\n\nfunction SSOCallback() {\n  const { signUp, setActive } = useSignUp();\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (signUp && searchParams) {\n        const username = searchParams.get(\"name\") ?? '';\n        const phoneNumber = searchParams.get(\"phone\") ?? '';\n        const firstSpaceIndex = username.indexOf(\" \");\n        const firstName = firstSpaceIndex > -1 ? username.substring(0, firstSpaceIndex) : username;\n        const lastName = firstSpaceIndex > -1 ? username.substring(firstSpaceIndex + 1) : \"\";\n        try {\n          await signUp.update({\n            firstName,\n            lastName,\n            phoneNumber\n          });\n          if (signUp?.status === \"complete\") {\n            await setActive({ session: signUp.createdSessionId });\n            navigate('/');\n          }\n        } catch (err: any) {\n          console.error(\"An unexpected error occured.\");\n        }\n      }\n    };\n    fetchData();\n  }, [searchParams, signUp]);\n\n  return (\n    <div className=\"container\">\r\n            <div className=\"loader\" />\r\n        </div>);\n\n}\n\nexport default SSOCallback;", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\n\r\nimport { getAuth } from \"@clerk/remix/ssr.server\";\r\nimport { createClerkClient } from \"@clerk/remix/api.server\";\r\n\r\nexport const loader: LoaderFunction = async (args) => {\r\n  const { userId } = await getAuth(args);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/sign-in?redirect_url=\" + args.request.url);\r\n  }\r\n\r\n  const user = await createClerkClient({ secretKey: process.env.CLERK_SECRET_KEY }).users.getUser(userId);\r\n  return { serialisedUser: JSON.stringify(user) };\r\n};\r\n\r\nexport default function SsrDemoPage() {\r\n  const { serialisedUser } = useLoaderData();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main className=\"main\">\r\n        <h1 className=\"title\">SSR Demo page with /api.server</h1>\r\n        <p className=\"description\">This route has a loader that fetches the user on the server-side.</p>\r\n        <p className=\"description\">\r\n          If you only intend to use the `user` object on the client-side, you most probably want to simply use the\r\n          `useUser` hook instead.\r\n        </p>\r\n\r\n        <div className=\"preContainer\">\r\n          <h2>useLoaderData hook</h2>\r\n          <p className=\"description\">\r\n            The loader uses getAuth to get the userId and users.getUser to fetch the user object\r\n          </p>\r\n          <pre>{JSON.stringify({ serialisedUser }, null, 2)}</pre>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n", "// ** Clerk Signin Import\nimport { SignIn } from \"@clerk/remix\";\nimport { LinksFunction } from \"@remix-run/node\";\n\n// ** Styles Import\nimport styles from \"~/styles/sign-in.css\";\n\n// Import styles\nexport const links: LinksFunction = () => [\n{ rel: 'stylesheet', href: styles }];\n\n\nexport default function SignInPage() {\n  return (\n    <div className=\"container\">\r\n      <div className=\"mt-[50px]\">\r\n        <SignIn path=\"/sign-in\" routing=\"path\" signUpUrl=\"/sign-up\" />\r\n      </div>\r\n    </div>);\n\n}", "// ** React Import\nimport { useState, FormEvent } from \"react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { LinksFunction } from \"@remix-run/react/dist/routeModules\";\n\n// ** Clerk Hook Import\nimport { useSignUp } from \"@clerk/remix\";\n\n// ** Icon Import\nimport { FiEyeOff, FiEye } from \"react-icons/fi\";\nimport { BsArrowRight } from \"react-icons/bs\";\n\n// ** Third-party Component Import\nimport PhoneInput from 'react-phone-number-input';\n\n// ** Styles Import\nimport styles from \"~/styles/sign-up.css\";\nimport phoneInputCSS from 'react-phone-number-input/style.css';\n\n// Import styles\nexport const links: LinksFunction = () => [\n{ rel: 'stylesheet', href: styles },\n{ rel: 'stylesheet', href: phoneInputCSS }];\n\n\nexport default function SignUpPage() {\n\n  // Hook\n  const navigate = useNavigate();\n  const { isLoaded, signUp, setActive } = useSignUp();\n\n  // State\n  const [errors, setErrors] = useState<any[]>([]);\n  const [userCreated, setUserCreated] = useState<boolean>(false);\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [phoneFocused, setPhoneFocused] = useState<boolean>(false);\n\n  // Input State\n  const [agree, setAgree] = useState<boolean>(false);\n  const [username, setUserName] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [phoneNumber, setPhoneNumber] = useState<string>(\"\");\n  const [emailAddress, setEmailAddress] = useState<string>(\"\");\n\n  // Submit clerk basic sign-up form\n  const handleBasicSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!isLoaded) {\n      return;\n    }\n\n    if (!agree) {\n      setErrors([{\n        paramName: 'agree',\n        message: 'You need to accept terms to submit.'\n      }]);\n      return;\n    }\n\n    try {\n      const firstSpaceIndex = username.indexOf(\" \");\n      const firstName = firstSpaceIndex > -1 ? username.substring(0, firstSpaceIndex) : username;\n      const lastName = firstSpaceIndex > -1 ? username.substring(firstSpaceIndex + 1) : \"\";\n      await signUp.create({\n        firstName,\n        lastName,\n        phoneNumber\n      });\n      const expectedMissingFields = ['email_address', 'phone_number'];\n      if (\n      signUp.status === \"missing_requirements\" ||\n      signUp.missingFields.every((field) => expectedMissingFields.includes(field)))\n      {\n        setUserCreated(true);\n      }\n    } catch (err: any) {\n      setErrors(err?.errors ?? []);\n    }\n  };\n\n  // Submit clerk crendential sign-up form\n  const handleCrendentialSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!isLoaded) {\n      return;\n    }\n\n    try {\n      await signUp.update({\n        emailAddress,\n        password\n      });\n\n      if (signUp.status === \"complete\") {\n        await setActive({ session: signUp.createdSessionId });\n        redirectHome();\n      }\n    } catch (err: any) {\n      setErrors(err?.errors ?? []);\n    }\n  };\n\n  // Submit clerk oauth sign-up form\n  const attachGoogleAccount = async () => {\n    await signUp?.\n    authenticateWithRedirect({\n      strategy: \"oauth_google\",\n      redirectUrl: `/sign-up/sso-callback?name=${username}&phone=${encodeURIComponent(phoneNumber)}`,\n      redirectUrlComplete: \"/\"\n    });\n  };\n\n  // Get the message from field name\n  const getErrorMessage = (fieldName: string) => {\n    let error = errors.find((item) => (item.paramName || item.meta.paramName) === fieldName)?.message ?? null;\n    if (error === 'is invalid') {\n      error = fieldName.split('_').join(' ') + ' is invalid';\n      error = error.charAt(0).toUpperCase() + error.slice(1);\n    }\n    return error;\n  };\n\n  // Navigate to home page\n  const redirectHome = () => {\n    navigate('/');\n  };\n\n  const renderBasicForm = () => {\n    return (\n      <div className=\"custom-section\">\r\n        <img src=\"/image/logo.jpg\" className=\"image-logo\" />\r\n        <h4 className=\"signup-description\">Create your account</h4>\r\n        <div className=\"signup-sub-description\">to continue to Sherlock</div>\r\n        <hr />\r\n        <form onSubmit={handleBasicSubmit} className=\"signup-form signup-basic-form\">\r\n          {/* Input Full Name */}\r\n          <div className=\"custom-form-item\">\r\n            <label htmlFor=\"userName\">Full Name</label>\r\n            <input\n              id=\"userName\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUserName(e.target.value)}\n              placeholder=\"Enter Full Name\" />\n            \r\n            <div className=\"err-msg\">{getErrorMessage('first_name') ?? getErrorMessage('last_name')}</div>\r\n          </div>\r\n          {/* Input Phone Number */}\r\n          <div className={`custom-form-item${phoneFocused ? ' focused' : ''}`}>\r\n            <label htmlFor=\"userPhone\">Phone</label>\r\n            <PhoneInput\n              placeholder=\"Enter Phone Number\"\n              onBlur={() => setPhoneFocused(false)}\n              onFocus={() => setPhoneFocused(true)}\n              value={phoneNumber}\n              onChange={(v) => setPhoneNumber(v ?? '')} />\n            \r\n            <div className=\"err-msg\">{getErrorMessage('phone_number')}</div>\r\n          </div>\r\n          {/* Checkbox Terms and Condition */}\r\n          <div className=\"agree_tnc\">\r\n            <input\n              id=\"checkTnC\"\n              type=\"checkbox\"\n              checked={agree}\n              onChange={(e) => setAgree(e.target.checked)} />\n            \r\n            <label htmlFor=\"checkTnC\">I agree to terms and conditions.</label>\r\n          </div>\r\n          <div className=\"err-msg\">{getErrorMessage('agree')}</div>\r\n          {/* Button Submit */}\r\n          <button type=\"submit\" className=\"btn-submit\" disabled={!isLoaded}>\r\n            Continue\r\n          </button>\r\n        </form>\r\n      </div>);\n\n  };\n\n  const renderOAuthForm = () => {\n    return (\n      <div className=\"custom-section\">\r\n        <img src=\"/image/logo.jpg\" className=\"image-logo\" />\r\n        <h4 className=\"signup-description\">Create your account</h4>\r\n        <div className=\"signup-sub-description\">to continue to Sherlock</div>\r\n        <form className=\"signup-form signup-credential-form\" onSubmit={handleCrendentialSubmit}>\r\n          {/* BUTTON WITH GOOGLE */}\r\n          <button type=\"button\" className=\"btn-oauth\" onClick={attachGoogleAccount}>\r\n            <img src=\"/image/google_logo.png\" width={15} className=\"g_logo\" />\r\n            Continue with Google\r\n            <div className=\"arrow-right ml-auto\">\r\n              <BsArrowRight size={15} />\r\n            </div>\r\n          </button>\r\n          <hr />\r\n          {/* Input Email Address */}\r\n          <div className=\"custom-form-item\">\r\n            <label htmlFor=\"userEmail\">Email</label>\r\n            <input\n              id=\"userEmail\"\n              type=\"email\"\n              value={emailAddress}\n              onChange={(e) => setEmailAddress(e.target.value)}\n              placeholder=\"Enter Email Address\" />\n            \r\n            <div className=\"err-msg\">{getErrorMessage('email_address')}</div>\r\n          </div>\r\n          {/* Input Password */}\r\n          <div className=\"custom-form-item\">\r\n            <label htmlFor=\"userPassword\">Password</label>\r\n            <div className=\"input-password\">\r\n              <input\n                id=\"userPassword\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Enter Password\" />\n              \r\n              <div className=\"pwd-option\" onClick={() => setShowPassword(!showPassword)}>\r\n                {showPassword ? <FiEyeOff size={16} color=\"#5d5d5d\" /> : <FiEye size={16} color=\"#5d5d5d\" />}\r\n              </div>\r\n            </div>\r\n            <div className=\"err-msg\">{getErrorMessage('password')}</div>\r\n          </div>\r\n          {/* Button Submit */}\r\n          <button type=\"submit\" className=\"btn-submit\" disabled={!isLoaded}>\r\n            Continue\r\n          </button>\r\n        </form>\r\n      </div>);\n\n  };\n\n  return (\n    <div className=\"container\">\r\n      {userCreated ?\n      renderOAuthForm() :\n\n      renderBasicForm()}\n      \r\n    </div>);\n\n}", "import { redirect } from \"@remix-run/node\";\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { useUser } from \"@clerk/remix\";\r\nimport { getAuth } from \"@clerk/remix/ssr.server\";\r\n\r\nconst mockGetPosts = (userId: string) => {\r\n  return Promise.resolve([{ title: \"A Post\", content: \"Hello from Clerk + Remix\" }]);\r\n};\r\n\r\nexport const loader: LoaderFunction = async (args) => {\r\n  const { userId, sessionId, getToken } = await getAuth(args);\r\n  console.log(\"Use getAuth() to access the auth state:\", userId, sessionId, getToken);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/sign-in?redirect_url=\" + args.request.url);\r\n  }\r\n\r\n  const posts = await mockGetPosts(userId);\r\n  return { posts };\r\n};\r\n\r\nexport default function SsrDemoPage() {\r\n  const { isSignedIn, isLoaded, user } = useUser();\r\n  const { posts } = useLoaderData();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main className=\"main\">\r\n        <h1 className=\"title\">SSR Demo page</h1>\r\n        <p className=\"description\">\r\n          This page and any displayed data are fully rendered on the server side. Reload this page to try it out.\r\n        </p>\r\n\r\n        <div className=\"preContainer\">\r\n          <h2>useLoaderData hook</h2>\r\n          <p className=\"description\">\r\n            The loader uses getAuth to get the userId and fetch the posts from a remote database\r\n          </p>\r\n          <pre>{JSON.stringify({ posts }, null, 2)}</pre>\r\n        </div>\r\n\r\n        <div className=\"preContainer\">\r\n          <h2>useUser hook</h2>\r\n          <p className=\"description\">\r\n            Passing {`{ loadUser: true }`} to the root loader makes all Clerk data available both during SSR and CSR\r\n          </p>\r\n          <pre>{JSON.stringify({ isLoaded })}</pre>\r\n          <pre>{JSON.stringify({ isSignedIn })}</pre>\r\n          <pre>{JSON.stringify({ user }, null, 2)}</pre>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n", "import { UserProfile } from \"@clerk/remix\";\r\n\r\nexport default function UserProfilePage() {\r\n  return <UserProfile path=\"/user\" routing=\"path\" />;\r\n}\r\n", "// ** React Imports\nimport { useState, useEffect } from \"react\";\nimport { redirect } from \"@remix-run/node\";\n\n// ** Custom Component Imports\nimport Spinner from \"~/components/Spinner\";\nimport StatsCard from \"~/components/dashboard/StatsCard\";\nimport ChatBoard from \"~/components/dashboard/ChatBoard\";\nimport KPIEditModal from \"~/components/dashboard/KPIEditModal\";\nimport StepWizardModal from \"~/components/dashboard/StepWizardModal\";\nimport SessionListModal from \"~/components/dashboard/SessionListModal\";\n\n// ** React Slider Component Imports\nimport Slider from 'react-slick';\n\n// ** Constants Imports\nimport { BUSINESS_STAT_LIST, SLICK_SETTING } from \"~/constants/data\";\n\n// ** Utils Imports\nimport { getActionSteps } from \"utils/getActionSteps\";\nimport { getPriorityDecision } from \"utils/indexStore\";\nimport {\n  saveSession,\n  getSessionData,\n  getSessionList,\n  getAnswerFromBot,\n  updateSessionData } from\n\"~/utils/api\";\nimport {\n  dateFormatter,\n  getDateString,\n  getStatsByForm,\n  getFormFromStats,\n  scrollDownToBottom,\n  priorityListToString,\n  formatPriorityRequest } from\n\"~/utils\";\n\n// ** Icons Imports\nimport { BsBarChart, BsChatSquareDots } from \"react-icons/bs\";\n\n// ** 3rd party Imports\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { useLoaderData } from \"@remix-run/react\";\n\n// ** Type Imports\nimport type {\n  MetaFunction,\n  LinksFunction,\n  LoaderFunction } from\n\"@remix-run/node\";\nimport type {\n  KPIType,\n  ChatType,\n  StatType,\n  StatsForm,\n  SessionItemType,\n  SessionListType } from\n\"~/interfaces\";\n\n// ** Style Imports\nimport slickStyle from \"slick-carousel/slick/slick.css\";\nimport chatLoaderStyle from \"~/styles/chatloader.css\";\nimport slickThemeStyle from \"slick-carousel/slick/slick-theme.css\";\nimport progressbarStyle from \"react-circular-progressbar/dist/styles.css\";\n\n// ** Loader Function\nexport const loader: LoaderFunction = async (args) => {\n  const { userId } = await getAuth(args);\n\n  if (!userId) {\n\n    // return redirect(\"/sign-in?redirect_url=\" + args.request.url);\n  }\n  return { userId };\n};\n\n// Style Imports\nexport const links: LinksFunction = () => [\n{ rel: 'stylesheet', href: progressbarStyle },\n{ rel: 'stylesheet', href: chatLoaderStyle },\n{ rel: 'stylesheet', href: slickStyle },\n{ rel: 'stylesheet', href: slickThemeStyle }];\n\n\n// Set page title\nexport const meta: MetaFunction = () => {\n  return { title: \"Dashboard\" };\n};\n\nconst Dashboard = () => {\n\n  // User Id\n  const { userId } = useLoaderData();\n\n  // State\n  const [tab, setTab] = useState<string>('stats-loading');\n  const [editItem, setEditItem] = useState<any>(null);\n  const [chatList, setChatList] = useState<Array<ChatType>>([]);\n  const [statsForm, setStatsForm] = useState<StatsForm>({});\n  const [chatLoading, setChatLoading] = useState<boolean>(false);\n  const [sessionList, setSessionList] = useState<SessionListType>([]);\n  const [priorityList, setPriorityList] = useState<any>(null);\n  const [businessStats, setBusinessStats] = useState<Array<StatType>>(BUSINESS_STAT_LIST);\n  const [currentSession, setCurrentSession] = useState<any>(null);\n  const [stepWizardModal, setStepWizardModal] = useState<boolean>(false);\n  const [sessionListModal, setSessionListModal] = useState<boolean>(false);\n\n\n  // Initialize\n  useEffect(() => {\n    pushMessage(true, \"Hello! I am Sherlock. How can I assist you today?\");\n    async function initialize() {\n      const sessions: SessionListType = await getSessionList(userId);\n      setSessionList(sessions);\n      if (sessions.length > 0) {\n        updateCurrentSession(sessions[sessions.length - 1]);\n      }\n    }\n    initialize();\n  }, []);\n\n  // Show loading when display slick to hidden it for 400ms\n  useEffect(() => {\n    if (tab === 'stats-loading') {\n      setTimeout(() => {\n        setTab((prevTab: string) => {\n          return prevTab === 'stats-loading' ? 'stats' : prevTab;\n        });\n      }, 400);\n    }\n  }, [tab]);\n\n  // Update the Current Session and get the session data\n  const updateCurrentSession = async (pSession: any) => {\n    if (!pSession) {\n      setCurrentSession(null);\n      setBusinessStats(BUSINESS_STAT_LIST);\n      return;\n    }\n    const sessionData: SessionItemType | null = await getSessionData(userId, pSession.sessionId);\n    if (sessionData) {\n      const { statsData, priorityList, actionSteps }: SessionItemType = sessionData;\n      setBusinessStats(statsData);\n      pushMessage(true, priorityListToString(priorityList));\n      pushMessage(true, actionSteps);\n    }\n    setCurrentSession(pSession);\n  };\n\n  // Add new chat item\n  const pushMessage = (isIn: boolean, text: string) => {\n    setChatList((chatList) => [...chatList, {\n      isIn,\n      text,\n      time: dateFormatter.format(new Date())\n    }]);\n    scrollDownToBottom(\"chat_list\");\n  };\n\n  // Update current business stats\n  const updateBusinessStats = async (newStatsForm: any, isNew: boolean, data?: string) => {\n    const newBusinessStats = getStatsByForm(newStatsForm);\n    setBusinessStats(newBusinessStats);\n    setChatLoading(true);\n    scrollDownToBottom(\"chat_list\");\n\n    let result: any = {};\n    try {\n      result = await getPriorityDecision(formatPriorityRequest(newBusinessStats));\n      setPriorityList(result);\n      setChatLoading(false);\n      pushMessage(true, priorityListToString(result));\n      pushMessage(true, getActionSteps(result?.high_constraint ?? ''));\n\n      if (isNew) {\n        // Save new session\n        const newSessionName = data ?? getDateString(new Date());\n        const newSessionId = await saveSession(userId, {\n          statsData: newBusinessStats,\n          priorityList: result,\n          actionSteps: getActionSteps(result?.high_constraint ?? '')\n        }, newSessionName);\n        if (newSessionId) {\n          setCurrentSession({\n            sessionId: newSessionId,\n            sessionName: newSessionName\n          });\n          setSessionList([\n          ...sessionList,\n          {\n            sessionId: newSessionId,\n            sessionName: newSessionName\n          }]\n          );\n        }\n      } else {\n        // Update current session\n        await updateSessionData(userId, currentSession.sessionId, {\n          statsData: newBusinessStats,\n          priorityList: result,\n          actionSteps: getActionSteps(result?.high_constraint ?? '')\n        });\n      }\n    } catch (e: any) {\n      setChatLoading(false);\n      pushMessage(true, e.toString());\n    }\n  };\n\n  // Update one KPI item\n  const handleUpdateKPI = async (isNew: boolean, sessionName?: string) => {\n    let newStatsForm = getFormFromStats(businessStats);\n    newStatsForm[editItem.id] = editItem.value;\n    setStatsForm(newStatsForm);\n    await updateBusinessStats(newStatsForm, isNew, sessionName);\n  };\n\n  // Send new message and get the answer\n  const handleSendMessage = async (chat: string) => {\n    pushMessage(false, chat);\n    setChatLoading(true);\n    scrollDownToBottom(\"chat_list\");\n    const answer = await getAnswerFromBot(chat, priorityList);\n    setChatLoading(false);\n    pushMessage(true, answer);\n  };\n\n  // Open SessionList modal\n  const handleSessionListOpen = () => {\n    setSessionListModal(true);\n    getSessionList(userId);\n  };\n\n  // Close Step Wizard\n  const handleCloseStepWizard = () => {\n    setStepWizardModal(false);\n    setStatsForm({});\n  };\n\n  return (\n    <div className=\"text-center my-14\">\r\n      <h1 className=\"text-3xl font-bold\">Sherlock Constraint Finder</h1>\r\n      <div className=\"text-xl mt-8\">Fill out each statistic below then start chatting with Sherlock</div>\r\n      <div className=\"grid grid-cols-2 mt-8 mx-3 sm:mx-0\">\r\n        <button className=\"bg-gray-700 mr-2 sm:ml-auto max-w-[300px] active:bg-gray-800 text-white rounded py-2 px-8\" onClick={handleSessionListOpen}>\r\n          Toggle Session\r\n        </button>\r\n        <button className=\"bg-gray-700 ml-2 sm:mr-auto max-w-[300px] active:bg-gray-800 text-white rounded py-2 px-8\" onClick={() => setStepWizardModal(true)}>\r\n          Collect Data\r\n        </button>\r\n      </div>\r\n      <div className=\"mx-auto max-w-[1500px]\">\r\n        <div className=\"mx-3 mt-8 grid grid-cols-2 sm:hidden\">\r\n          <div className={`mr-2 rounded cursor-pointer py-3 ${tab.startsWith('stats') ? 'bg-gray-700 text-white' : 'bg-gray-200'}`} onClick={() => setTab(\"stats-loading\")}>\r\n            <BsBarChart size={17} className=\"mx-auto\" />\r\n          </div>\r\n          <div className={`ml-2 rounded cursor-pointer py-3 ${tab === 'chat' ? 'bg-gray-700 text-white' : 'bg-gray-200'}`} onClick={() => setTab(\"chat\")}>\r\n            <BsChatSquareDots size={17} className=\"mx-auto\" />\r\n          </div>\r\n        </div>\r\n        <div className={`slider-wrapper max-h-[600px] overflow-y-hidden relative rounded-md sm:rounded-b-none mt-3 ${tab.startsWith('stats') ? 'block' : 'hidden'} sm:block sm:mb-0`}>\r\n          <Slider {...SLICK_SETTING}>\r\n            {businessStats.map((item: StatType, index) =>\n            <StatsCard\n              key={index}\n              data={item}\n              onOpenModal={(e: KPIType) => setEditItem(e)} />\n\n            )}\r\n          </Slider>\r\n          <div className={`absolute left-0 right-0 top-0 bottom-0 bg-gray-100 sm:hidden rounded-md flex items-center justify-center ${tab === 'stats-loading' ? 'block' : 'hidden'}`}>\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n        <div className={`mx-3 mt-3 sm:mt-0 ${tab === 'chat' ? 'block' : 'hidden'} sm:block`}>\r\n          <ChatBoard\n            chatList={chatList}\n            chatLoading={chatLoading}\n            handleSendMessage={handleSendMessage} />\n          \r\n        </div>\r\n      </div>\r\n      <KPIEditModal\n        editItem={editItem}\n        setEditItem={setEditItem}\n        handleUpdateKPI={handleUpdateKPI} />\n      \r\n      <SessionListModal\n        open={sessionListModal}\n        userId={userId}\n        onClose={() => setSessionListModal(false)}\n        sessionList={sessionList}\n        setSessionList={setSessionList}\n        currentSession={currentSession}\n        updateCurrentSession={updateCurrentSession} />\n      \r\n      <StepWizardModal\n        businessStats={businessStats}\n        statsForm={statsForm}\n        open={stepWizardModal}\n        onClose={handleCloseStepWizard}\n        setStatsForm={setStatsForm}\n        updateBusinessStats={updateBusinessStats} />\n      \r\n    </div>);\n\n};\n\nexport default Dashboard;", "export default function Spinner() {\r\n  return (\r\n    <div role=\"status\">\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        className=\"w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600\"\r\n        viewBox=\"0 0 100 101\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n        <path\r\n          d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n          fill=\"currentFill\"\r\n        />\r\n      </svg>\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n", "import type { FC } from 'react'\r\nimport type { KPIType } from '~/interfaces'\r\nimport * as Icons from 'react-icons/bs'\r\nimport { FONT_SIZE_BREAKPOINTS } from '~/constants/data'\r\n\r\ntype IconType = keyof typeof Icons\r\n\r\ninterface Props {\r\n  data: KPIType\r\n}\r\n\r\nconst KPIItem: FC<Props> = ({data}) => {\r\n  const Icon = Icons[data.icon as IconType]\r\n  const valueFontSize = FONT_SIZE_BREAKPOINTS.find((item: any) => (\r\n    item.size * (data.value?.toString().length ?? 1) > 100\r\n  ))?.name ?? 'text-lg'\r\n\r\n  return (\r\n    <div className='my-6 px-3 xl:px-5 rounded-md hover:bg-gray-700 hover:text-white transition-all cursor-pointer flex items-center bg-white h-[65px]'>\r\n      <div><Icon size={26} /></div>\r\n      <div className='ml-4 mr-2 text-left'>\r\n        <h1 className='font-bold'>{data.title}</h1>\r\n        <div className='text-xs'>{data.description}</div>\r\n      </div>\r\n      <h1 className={`ml-auto ${valueFontSize} font-extrabold text-right`}>{data.value ?? 0}{data.unit ?? ''}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default KPIItem", "import { SessionListType } from \"~/interfaces\";\r\n\r\nexport const BUSINESS_STAT_LIST = [\r\n  {\r\n    title: \"Organic Marketing\",\r\n    kpiList: [\r\n      {\r\n        id: \"contactedLeads\",\r\n        icon: \"BsPerson\",\r\n        title: \"Contacted Leads\",\r\n        description: \"How many leads did you contact\",\r\n      },\r\n      {\r\n        id: \"responses\",\r\n        icon: \"BsEnvelope\",\r\n        title: \"Responses\",\r\n        description: \"How many responses did you get\",\r\n      },\r\n      {\r\n        id: \"apptsSet\",\r\n        icon: \"BsPencil\",\r\n        title: \"Appts Set\",\r\n        description: \"How many appointments did you set\",\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: \"Paid Ads\",\r\n    kpiList: [\r\n      {\r\n        id: \"cpm\",\r\n        icon: \"BsEye\",\r\n        title: \"CPM\",\r\n        description: \"What was your cost per thousand impressions\",\r\n      },\r\n      {\r\n        id: \"ctr\",\r\n        icon: \"BsMouse2\",\r\n        title: \"CTR\",\r\n        description: \"What's your click through rate\",\r\n        unit: '%'\r\n      },\r\n      {\r\n        id: \"optInRate\",\r\n        icon: \"BsDoorClosed\",\r\n        title: \"Opt-in Rate\",\r\n        description: \"This rate all which heads opt-in\",\r\n        unit: '%'\r\n      },\r\n      {\r\n        id: \"adSpend\",\r\n        icon: \"BsUbuntu\",\r\n        title: \"Ad Spend\",\r\n        description: \"How many do you spend on ads\",\r\n      },\r\n      {\r\n        id: \"leads\",\r\n        icon: \"BsUniversalAccess\",\r\n        title: \"Leads\",\r\n        description: \"The number of leads you got\",\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: \"Appointment Setting\",\r\n    kpiList: [\r\n      {\r\n        id: \"dials\",\r\n        icon: \"BsPhoneVibrate\",\r\n        title: \"Dials\",\r\n        description: \"How many dials did you make\",\r\n      },\r\n      {\r\n        id: \"pickups\",\r\n        icon: \"BsTelephoneInbound\",\r\n        title: \"Pickups\",\r\n        description: \"How many people picked up\",\r\n      },\r\n      {\r\n        id: \"sets\",\r\n        icon: \"BsCheckLg\",\r\n        title: \"Sets\",\r\n        description: \"How many appointments did you set\",\r\n      },\r\n      {\r\n        id: \"dqs\",\r\n        icon: \"BsSlashCircle\",\r\n        title: \"DQ's\",\r\n        description: \"How many DQ's did you get\",\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: \"Closing\",\r\n    kpiList: [\r\n      {\r\n        id: \"shows\",\r\n        icon: \"BsGraphUp\",\r\n        title: \"Shows\",\r\n        description: \"How many shows did you have\",\r\n      },\r\n      {\r\n        id: \"closes\",\r\n        icon: \"BsLock\",\r\n        title: \"Closes\",\r\n        description: \"How many people did you close\"\r\n      },\r\n      {\r\n        id: \"pifs\",\r\n        icon: \"BsCurrencyDollar\",\r\n        title: \"PIF's\",\r\n        description: \"How many people paid in full\",\r\n        unit: \"$\"\r\n      },\r\n      {\r\n        id: \"payPlan\",\r\n        icon: \"BsCurrencyDollar\",\r\n        title: \"Pay Plan\",\r\n        description: \"How many people did you put on a pay plan\",\r\n        unit: \"$\"\r\n      },\r\n      {\r\n        id: \"cash\",\r\n        icon: \"BsCurrencyDollar\",\r\n        title: \"Cash\",\r\n        description: \"How much cash did you collect\",\r\n        unit: \"$\"\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\nexport const FONT_SIZE_BREAKPOINTS = [\r\n  {\r\n    name: 'text-xs',\r\n    size: 12\r\n  },\r\n  {\r\n    name: 'text-sm',\r\n    size: 14\r\n  },\r\n  {\r\n    name: 'text-base',\r\n    size: 16\r\n  },\r\n  {\r\n    name: 'text-lg',\r\n    size: 18\r\n  }\r\n]\r\n\r\nexport const SLICK_SETTING = {\r\n  autoplay: false,\r\n  dots: true,\r\n  infinite: false,\r\n  slidesToShow: 4,\r\n  slidesToScroll: 1,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1150,\r\n      settings: { slidesToShow: 3}\r\n    },\r\n    {\r\n      breakpoint: 876,\r\n      settings: { slidesToShow: 2}\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: { slidesToShow: 1}\r\n    }\r\n  ]\r\n};\r\n\r\nexport const KPI_ENTER_VALUE_STEP = 0\r\nexport const KPI_SET_TYPE_STEP = 1", "import KPIItem from \"./KPIItem\"\r\nimport type { FC } from 'react'\r\nimport type { StatType } from \"~/interfaces\"\r\n\r\ninterface Props {\r\n  data: StatType\r\n  onOpenModal: any\r\n}\r\n\r\nconst StatsCard: FC<Props> = ({data, onOpenModal}) => {\r\n  return (\r\n  <div className=\"px-2 mx-auto mt-8 mb-10 max-w-[360px]\">\r\n    <div className=\"text-xl font-bold text-center\"><strong>{data.title}</strong></div>\r\n    <div className=\"mt-8 w-full mx-auto\">\r\n      {data.kpiList.map((item, index) => (\r\n        <div key={index} onClick={() => onOpenModal(item)}>\r\n          <KPIItem data={item} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default StatsCard\r\n", "// ** React Import\r\nimport { useState } from \"react\"\r\n\r\n// ** Type Import\r\nimport type { ChatType } from \"~/interfaces\"\r\nimport type { KeyboardEventHandler } from \"react\";\r\n\r\n// ** Component Import\r\nimport ChatItem from \"./ChatItem\"\r\nimport ChatLoader from \"./ChatLoader\"\r\nimport { AiOutlineSend } from \"react-icons/ai\"\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\n\r\ninterface Props {\r\n  chatList: Array<ChatType>\r\n  chatLoading: boolean\r\n  handleSendMessage: any\r\n}\r\n\r\nexport default function ChatBoard(props: Props) {\r\n\r\n  const { chatList, chatLoading, handleSendMessage } = props\r\n\r\n  const [chat, setChat] = useState<string>('')\r\n\r\n  const handleChatKeydown: KeyboardEventHandler<HTMLTextAreaElement> = (e) => {\r\n    if(e.keyCode == 13 && e.shiftKey == false) {\r\n      e.preventDefault()\r\n      setChat('')\r\n      handleSendMessage(chat)\r\n    }\r\n  }\r\n\r\n  const handleSendClick = () => {\r\n    setChat('')\r\n    handleSendMessage(chat)\r\n  }\r\n\r\n  return (\r\n    <div className=\"rounded-md w-full mx-auto bg-gray-100 p-3 sm:rounded-t-none\">\r\n      <div className=\"h-[520px]\">\r\n        <div className=\"pr-2 sm:bg-white sm:rounded-md sm:p-6 sm:shadow-md pb-2 h-full overflow-y-auto rounded-scroll\" id=\"chat_list\">\r\n          <div className=\"flex flex-col justify-end\">\r\n            {chatList.map((item: ChatType, index) => <ChatItem data={item} key={index} />)}\r\n            {chatLoading && (\r\n              <ChatLoader />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-white rounded-md mt-3 p-2 flex flex-row shadow-md items-center\">\r\n        <TextareaAutosize  \r\n          className=\"no-resize-textarea h-fit w-full border-none outline-none text-sm px-2\" \r\n          value={chat}\r\n          onChange={e => setChat(e.target.value)}\r\n          onKeyDown={handleChatKeydown}\r\n        />\r\n        <button className=\"bg-gray-700 active:bg-gray-800 text-white rounded-md py-1 pl-4 pr-3 sm:py-2 sm:pl-6 sm:pr-5 self-end\" onClick={handleSendClick}>\r\n          <AiOutlineSend size={20} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}", "import { FC } from \"react\"\r\nimport { ChatType } from \"~/interfaces\"\r\n\r\ninterface Props {\r\n  data: ChatType\r\n}\r\nconst ChatItem: FC<Props> = ({data}) => {\r\n  return data.isIn ? (\r\n    <div className=\"sm:flex mb-3\">\r\n      <img src=\"/image/to_avatar.png\" className=\"rounded-full w-8 h-8 object-cover hidden sm:block\" />\r\n      <div className=\"sm:ml-4 w-full text-left\">\r\n        <div className=\"w-fit content bg-gray-700 px-4 py-2 rounded-lg rounded-tl-none leading-5 sm:leading-6 max-w-[100%] sm:max-w-[70%] lg:max-w-[60%] mr-auto text-white text-left text-sm\">\r\n          {data.text.split(\"\\n\").map((i,key) => {\r\n            return <div key={key} className=\"w-full break-word\">{i}</div>\r\n          })}\r\n        </div>\r\n        <div className=\"text-xs sm:text-sm text-gray-400 mt-1 hidden sm:block\">\r\n          {data.time}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"sm:flex sm:flex-row-reverse mb-3\">\r\n      <img src=\"/image/from_avatar.png\" className=\"rounded-full w-8 h-8 object-cover hidden sm:block\" />\r\n      <div className=\"sm:mr-4 w-full\">\r\n        <div className=\"w-fit content bg-gray-300 px-4 py-2 rounded-lg rounded-tr-none leading-5 sm:leading-6 max-w-[100%] sm:max-w-[70%] lg:max-w-[60%] ml-auto text-right text-sm\">\r\n          {data.text.split(\"\\n\").map((i,key) => {\r\n            return <div key={key} className=\"w-full break-word\">{i}</div>\r\n          })}\r\n        </div>\r\n        <div className=\"text-xs sm:text-sm text-left sm:text-right text-gray-400 mt-1 hidden sm:block\">\r\n          {data.time}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatItem", "export default function ChatLoader() {\r\n  return (\r\n    <div className=\"flex mb-3\">\r\n      <img src=\"/image/to_avatar.png\" className=\"rounded-full w-8 h-8 object-cover hidden sm:block\" />\r\n      <div className=\"sm:ml-4 w-full text-left\">\r\n        <div className=\"w-fit content bg-gray-700 pl-6 pr-3 py-[13px] rounded-lg rounded-tl-none leading-6 text-right\">\r\n          <div className=\"loader slide flex\">\r\n            <span className=\"loader__dot slide__one\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot slide__two\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n", "import type { FC } from \"react\"\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport ReactModal from 'react-modal';\r\n\r\ninterface Props {\r\n  title: string;\r\n  open: boolean;\r\n  onClose: any;\r\n  footer?: any;\r\n}\r\n\r\nconst Modal: FC<Props> = (data) => {\r\n  const { title, open, onClose, footer, children } = data\r\n  return (\r\n    <ReactModal\r\n      isOpen={open}\r\n      shouldCloseOnOverlayClick\r\n      onRequestClose={onClose}\r\n      ariaHideApp={false}\r\n      className=\"w-[90%] max-w-[450px] bg-white outline-none rounded-md mx-auto my-[100px] text-gray-600\"\r\n      overlayClassName=\"fixed inset-0 bg-black bg-opacity-50 overflow-y-auto\"\r\n    >\r\n      <div className=\"px-4 py-3 border-b flex\">\r\n        <h2 className=\"font-bold\">{title}</h2>\r\n        <button onClick={onClose} className=\"ml-auto\">\r\n          <BsXLg size={14} />\r\n        </button>\r\n      </div>\r\n      <div className=\"p-6\">\r\n        {children}\r\n      </div>\r\n      {footer && (\r\n        <div className=\"border-t p-4\">\r\n          {footer}\r\n        </div>\r\n      )}\r\n    </ReactModal>\r\n  )\r\n}\r\n\r\nexport default Modal", "import Modal from \"../Modal\"\r\nimport { useState } from \"react\"\r\nimport type { ChangeEvent} from \"react\";\r\nimport { KPI_ENTER_VALUE_STEP, KPI_SET_TYPE_STEP } from \"~/constants/data\"\r\n\r\ninterface Props {\r\n  editItem: any\r\n  setEditItem: any\r\n  handleUpdateKPI: any\r\n}\r\n\r\nexport default function KPIEditModal(props: Props) {\r\n\r\n  const { editItem, setEditItem, handleUpdateKPI } = props\r\n  const [step, setStep] = useState<number>(KPI_ENTER_VALUE_STEP)\r\n  const [option, setOption] = useState<string>('update')\r\n  const [sessionName, setSessionName] = useState<string>('')\r\n  const [saving, setSaving] = useState<boolean>(false)\r\n\r\n  const handleCloseUpdateModal = () => {\r\n    setEditItem(null)\r\n    setOption('update')\r\n    setSessionName('')\r\n    setStep(KPI_ENTER_VALUE_STEP)\r\n  }\r\n\r\n  const handleChangeKPI = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEditItem({\r\n      ...editItem,\r\n      value: Number(e.target.value)\r\n    })\r\n  }\r\n\r\n  const handleSelectOption = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setOption(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    setSaving(true)\r\n    await handleUpdateKPI(option === 'create', sessionName)\r\n    setSaving(false)\r\n    setEditItem(null)\r\n    setOption('update')\r\n    setSessionName('')\r\n    setStep(KPI_ENTER_VALUE_STEP)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Change KPI\"\r\n      open={editItem !== null}\r\n      onClose={handleCloseUpdateModal}\r\n      footer={\r\n        <div className=\"text-right\">\r\n          {step === KPI_ENTER_VALUE_STEP ? (\r\n            <button className=\"bg-gray-700 text-xs sm:text-sm px-4 py-2 rounded text-white\" onClick={() => setStep(KPI_SET_TYPE_STEP)}>\r\n              Next\r\n            </button>\r\n          ) : (\r\n            <button className=\"bg-gray-700 text-xs sm:text-sm px-4 py-2 rounded text-white\" onClick={handleSubmit}>\r\n              {saving ? 'Saving...' : 'Update'}\r\n            </button>\r\n          )}\r\n          <button className=\"bg-gray-200 text-xs sm:text-sm px-4 py-2 rounded ml-3\" onClick={handleCloseUpdateModal}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      }\r\n    >\r\n      {!editItem ? null : \r\n        step === KPI_ENTER_VALUE_STEP ? (\r\n          <div>\r\n            <div className=\"ml-1 text-sm sm:text-md\">{editItem.title}</div>\r\n            <input \r\n              type=\"number\" \r\n              className=\"rounded text-sm sm:text-md border outline-none px-3 py-2 mt-1 w-full focus:border-blue-600 transition\" \r\n              value={editItem?.value ?? ''}\r\n              onChange={handleChangeKPI}\r\n            />\r\n            <div className=\"text-xs sm:text-sm ml-1\">{editItem.description}</div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"ml-1 text-sm sm:text-md\">Select your option.</div>\r\n            <div className=\"mt-3\">\r\n              <label className=\"text-sm flex items-center\">\r\n                <input type=\"radio\" className=\"mr-2\" value=\"update\" checked={option === 'update'} onChange={handleSelectOption} />\r\n                Update the current session\r\n              </label>\r\n            </div>\r\n            <div className=\"mt-1\">\r\n              <label className=\"text-sm flex items-center\">\r\n                <input type=\"radio\" className=\"mr-2\" value=\"create\" checked={option === 'create'} onChange={handleSelectOption} />\r\n                Create a new session\r\n              </label>\r\n            </div>\r\n            {option === 'create' && (\r\n              <div className=\"mt-3\">\r\n                <input \r\n                  type=\"text\" \r\n                  className=\"rounded text-sm sm:text-md border outline-none px-3 py-2 mt-1 w-full focus:border-blue-600 transition\" \r\n                  value={sessionName}\r\n                  onChange={(e) => setSessionName(e.target.value)}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )\r\n      }\r\n    </Modal>\r\n  )\r\n}", "// ** React Import\r\nimport { useState } from \"react\"\r\n\r\n// ** Component Imports\r\nimport Modal from \"../Modal\"\r\nimport { Steps, useSteps } from \"react-step-builder\"\r\nimport { CircularProgressbarWithChildren } from \"react-circular-progressbar\"\r\nimport { BsArrowLeft, BsArrowRight, BsCheckLg, BsUiRadios } from \"react-icons/bs\"\r\n\r\n// ** Constant Import\r\nimport { BUSINESS_STAT_LIST } from \"~/constants/data\"\r\n\r\n// ** Type Imports\r\nimport type { ChangeEvent } from \"react\"\r\nimport type { KPIType, StatType, StatsForm } from \"~/interfaces\"\r\n\r\ninterface Props {\r\n  businessStats: Array<StatType>;\r\n  statsForm: StatsForm;\r\n  setStatsForm: any;\r\n  updateBusinessStats: any;\r\n  open: boolean;\r\n  onClose: any;\r\n}\r\n\r\nexport default function StepWizardModal(props: Props) {\r\n  \r\n  // Props\r\n  const { businessStats, statsForm, setStatsForm, updateBusinessStats, open, onClose } = props\r\n  \r\n  // Step builder hook\r\n  const { prev, next, progress, current, hasPrev, hasNext, isLast } = useSteps()\r\n\r\n  // State\r\n  const [saving, setSaving] = useState<boolean>(false)\r\n  const [sessionName, setSessionName] = useState<string>('')\r\n  const [requiredFields, setRequiredFields] = useState<Array<string>>([])\r\n\r\n  const handleNext = () => {\r\n    setRequiredFields([])\r\n    const formIds: Array<string> = BUSINESS_STAT_LIST[current - 1].kpiList.map(item => item.id)\r\n    const errorFields = formIds.filter((id: string) => isNaN(statsForm[id]))\r\n    if (errorFields.length === 0){\r\n      next()\r\n    } else {\r\n      setRequiredFields(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleChangeStatsForm = (id: string) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatsForm({\r\n      ...statsForm, \r\n      [id]: Number(e.target.value)\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    setSaving(true)\r\n    await updateBusinessStats(\r\n      statsForm, \r\n      true, \r\n      sessionName !== '' ? sessionName : null\r\n    )\r\n    setSaving(false)\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Session List\"\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      <div className=\"mx-auto text-left mt-8 text-gray-700\">\r\n        <div className=\"flex items-center mb-8\">\r\n          <h1 className=\"bg-blue-600 text-white rounded py-2 px-4 cursor-pointer text-lg shadow-lg flex items-center mr-3\">\r\n            <BsUiRadios className=\"mr-3\" />{isLast ? 'Final Step' : businessStats[current - 1].title}\r\n          </h1>\r\n          <div className=\"w-[80px] h-[80px] ml-auto\">\r\n            <CircularProgressbarWithChildren \r\n              value={progress * 100}\r\n              styles={{\r\n                path: { \r\n                  stroke: `rgba(37,99,255,0.8)`,\r\n                }\r\n              }}\r\n            >\r\n              {isLast ? (\r\n                <BsCheckLg size={30} className=\"text-blue-600\" />\r\n              ) : (\r\n                <span className=\"text-3xl text-blue-600 fond-bold\">{current}</span>\r\n              )}\r\n            </CircularProgressbarWithChildren>\r\n          </div>\r\n        </div>\r\n        <Steps>\r\n          {[\r\n            ...businessStats.map((item: StatType, index) => (\r\n              <div key={index} className=\"grid grid-cols-1 gap-4\">\r\n                {item.kpiList.map((kpiItem: KPIType, kpiIndex) => (\r\n                  <div className=\"\" key={kpiIndex}>\r\n                    <div className=\"ml-1 text-[15px] font-bold\">\r\n                      {kpiItem.title}\r\n                      {kpiItem.unit ? ` (${kpiItem.unit})` : ''}\r\n                    </div>\r\n                    <input\r\n                      type=\"number\" \r\n                      className={`rounded border text-sm ${\r\n                        requiredFields.indexOf(kpiItem.id) > -1 ? 'border-red-400' : 'focus:border-blue-600'\r\n                      } outline-none px-3 py-2 mt-1 w-full transition`}\r\n                      value={statsForm[kpiItem.id] ?? ''}\r\n                      onChange={handleChangeStatsForm(kpiItem.id)}\r\n                      placeholder={kpiItem.description}\r\n                    />\r\n                  </div>\r\n                  ))\r\n                }\r\n              </div>\r\n            )),\r\n            <div key={businessStats.length} className=\"text-center\">\r\n              <div className=\"text-xl leading-10 py-8\">\r\n                Well done! <br/> You have successfully configured everything.\r\n              </div>\r\n              <input\r\n                type=\"text\" \r\n                className=\"rounded max-w-[400px] border text-sm focus:border-blue-600 outline-none px-3 py-2 w-full transition mt-5\"\r\n                value={sessionName}\r\n                onChange={(e) => setSessionName(e.target.value)}\r\n                placeholder=\"Enter your session name\"\r\n              />\r\n            </div>\r\n          ]}\r\n        </Steps>\r\n        <div className=\"mt-12 flex\">\r\n          {hasPrev && (\r\n            <button onClick={prev} className=\"bg-gray-700 text-sm px-4 py-2 rounded text-white\">\r\n              <span className=\"flex items-center\"><BsArrowLeft className=\"mr-3\" /> Prev</span>\r\n            </button>\r\n          )}\r\n          {hasNext ? (\r\n            <button onClick={handleNext} className=\"bg-gray-700 text-sm px-4 py-2 rounded text-white ml-auto\">\r\n              <span className=\"flex items-center\">Next <BsArrowRight className=\"ml-3\" /></span>\r\n            </button>\r\n          ) : (\r\n            <button onClick={handleSubmit} className=\"bg-gray-700 text-sm px-4 py-2 rounded text-white ml-auto\">\r\n              {saving ? 'Saving...' : 'Submit'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}", "// ** React Import\r\nimport { useState } from \"react\"\r\n\r\n// ** Component Import\r\nimport Modal from \"../Modal\"\r\nimport { \r\n    BsTrash3, \r\n    BsXSquare,\r\n    BsCheckSquare, \r\n    BsPencilSquare\r\n} from \"react-icons/bs\";\r\n\r\n// ** Type Import\r\nimport type { FC} from \"react\";\r\nimport type { SessionListType } from \"~/interfaces\"\r\n\r\n// ** API Imports\r\nimport { deleteSession, updateSessionName } from \"~/utils/api\";\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: any;\r\n    userId: string;\r\n    sessionList: SessionListType;\r\n    setSessionList: any;\r\n    currentSession: any;\r\n    updateCurrentSession: any;\r\n}\r\n\r\nconst SessionListModal: FC<Props> = (props) => {\r\n    const { open, onClose, userId, sessionList, setSessionList, currentSession, updateCurrentSession } = props\r\n    const [ editItem, setEditItem ] = useState<any>(null)\r\n    const [ sessionName, setSessionName ] = useState<any>(null)\r\n\r\n    const handleEdit = (item: any) => (e: any) => {\r\n        e.stopPropagation()\r\n        setSessionName(item.sessionName)\r\n        setEditItem(item.sessionId)\r\n    }\r\n\r\n    const handleUpdate = async (e: any) => {\r\n        e.stopPropagation()\r\n        const success = await updateSessionName(userId, editItem, sessionName)\r\n        if (!success) return;\r\n        const index = sessionList.findIndex(item => item.sessionId === editItem)\r\n        sessionList[index].sessionName = sessionName\r\n        setSessionList(sessionList)\r\n        setEditItem(null)\r\n    }\r\n\r\n    const handleDelete = (id: string) => async (e: any) => {\r\n        e.stopPropagation()\r\n        const success = await deleteSession(userId, id)\r\n        if (!success) return;\r\n        const newList = sessionList.filter(item => item.sessionId !== id)\r\n        setSessionList(newList)\r\n        if (newList.find(item => item.sessionId === currentSession.sessionId)) {\r\n            return;\r\n        } else if (newList.length === 0) {\r\n            updateCurrentSession(null)\r\n        } else {\r\n            updateCurrentSession(newList[newList.length - 1])\r\n        }\r\n    }\r\n\r\n    const handleView = (item: any) => (e: any) => {\r\n        e.stopPropagation()\r\n        updateCurrentSession(item)\r\n        onClose()\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n            title=\"Session List\"\r\n            open={open}\r\n            onClose={onClose}\r\n        >\r\n            {sessionList.length === 0 ? (\r\n                <div className=\"flex justify-center py-16\">\r\n                    <h1>There is no sessions</h1>\r\n                </div>\r\n            ) : sessionList.map((item, index) => (\r\n                <div key={index} className=\"border p-2 border-gray-700 my-2 rounded cursor-pointer\">\r\n                    {item.sessionId === editItem ? (\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"mr-auto\">\r\n                                <input\r\n                                    type=\"text\" \r\n                                    className=\"rounded border text-sm outline-none px-2 py-1 w-full transition\"\r\n                                    value={sessionName}\r\n                                    onChange={(e) => setSessionName(e.target.value)}\r\n                                    placeholder=\"Enter your session name\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"mr-1 p-2\" onClick={handleUpdate}>\r\n                                <BsCheckSquare />\r\n                            </div>\r\n                            <div className=\"p-2\" onClick={() => setEditItem(null)}>\r\n                                <BsXSquare />\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"flex items-center\" onClick={handleView(item)}>\r\n                            <div className={`mr-auto px-2 py-1 text-sm border border-white ${currentSession?.sessionId === item?.sessionId ? 'text-blue-700' : ''}`}>\r\n                                {item.sessionName}\r\n                            </div>\r\n                            <div className=\"mr-1 p-2\" onClick={handleEdit(item)}>\r\n                                <BsPencilSquare />\r\n                            </div>\r\n                            <div className=\"p-2\" onClick={handleDelete(item.sessionId)}>\r\n                                <BsTrash3 />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SessionListModal", "import newAxios from \"axios\";\r\nimport { getActionSteps } from \"utils/getActionSteps\";\r\nimport { getAnswer, getContextFromIndex, getIndexName } from \"utils/indexStore\";\r\nimport type { SessionItemType, SessionListType } from \"~/interfaces\";\r\n\r\nconst axios = newAxios.create({\r\n  baseURL: \"https://sherlock-inmemorysearch-production.up.railway.app\",\r\n});\r\n\r\nexport const getSessionList = async (userId: string): Promise<SessionListType> => {\r\n  try {\r\n    const response = await axios.get(`/api/session/${userId}`);\r\n    const { success, items, message }: any = response.data;\r\n    if (success) {\r\n      return items;\r\n    } else {\r\n      console.log(\">>>getSessionList\", message);\r\n      return [];\r\n    }\r\n  } catch (err) {\r\n    console.log(\">>>getSessionList\", err);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getSessionData = async (userId: string, sessionId: string): Promise<SessionItemType | null> => {\r\n  try {\r\n    const response = await axios.get(`/api/session/${userId}/${sessionId}`);\r\n    const { success, data, message }: any = response.data;\r\n    if (success) {\r\n      return data;\r\n    } else {\r\n      console.log(\">>>getSessionData\", message);\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    console.log(\">>>getSessionData\", err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveSession = async (\r\n  userId: string,\r\n  data: SessionItemType,\r\n  sessionName?: string\r\n): Promise<string | null> => {\r\n  try {\r\n    const response = await axios.post(`/api/session/${userId}`, { data, sessionName });\r\n    const { success, message, sessionId }: any = response.data;\r\n    if (success) {\r\n      return sessionId;\r\n    } else {\r\n      console.log(\">>>saveSession\", message);\r\n      return null;\r\n    }\r\n  } catch (err) {\r\n    console.log(\">>>saveSession\", err);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const updateSessionData = async (userId: string, sessionId: string, data: SessionItemType): Promise<boolean> => {\r\n  try {\r\n    const response = await axios.put(`/api/session/${userId}/${sessionId}`, { data });\r\n    const { success, message }: any = response.data;\r\n    if (success) {\r\n      return true;\r\n    } else {\r\n      console.log(\">>>updateSessionData\", message);\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    console.log(\">>>updateSessionData\", err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const updateSessionName = async (userId: string, sessionId: string, sessionName: string): Promise<boolean> => {\r\n  try {\r\n    const response = await axios.put(`/api/session/${userId}/${sessionId}/name`, { sessionName });\r\n    const { success, message }: any = response.data;\r\n    if (success) {\r\n      return true;\r\n    } else {\r\n      console.log(\">>>updateSessionName\", message);\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    console.log(\">>>updateSessionName\", err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const deleteSession = async (userId: string, sessionId: string): Promise<boolean> => {\r\n  try {\r\n    const response = await axios.delete(`/api/session/${userId}/${sessionId}`);\r\n    const { success, message }: any = response.data;\r\n    if (success) {\r\n      return true;\r\n    } else {\r\n      console.log(\">>>deleteSession\", message);\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    console.log(\">>>deleteSession\", err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getAnswerFromBot = async (question: string, priorityList: any) => {\r\n  try {\r\n    const indexName = await getIndexName(question);\r\n    console.log(indexName);\r\n    const context = await getContextFromIndex(question, indexName ?? \"\");\r\n    console.log(context);\r\n    const answer = await getAnswer(\r\n      context ?? [],\r\n      question,\r\n      priorityList?.high_constraint ?? \"\",\r\n      getActionSteps(priorityList?.high_constraint ?? \"\")\r\n    );\r\n    console.log(answer);\r\n    return answer?.trim() ?? \"\uD83D\uDE0A\uD83D\uDE0A\uD83D\uDE0A\";\r\n  } catch (error) {\r\n    return \"\uD83D\uDE0A\uD83D\uDE0A\uD83D\uDE0A\";\r\n  }\r\n};\r\n", "export function getActionSteps(priorityConstraint: string): string {\r\n    if (priorityConstraint === \"Setter Output Is Too Low\") {\r\n        return `\r\n        a. Raise KPI's\r\n            i. Increase Your Output KPI's For Your Setters. We Recommend Setting\r\n               A KPI Of \"20 1 Minute Conversations OR 4 Sets\"\r\n            ii. Your Setters Dial Output Should Be 200% Of Total Leads, So For\r\n               Example: If You Get 50 New Leads Per Day, Each Setter Should Be\r\n               Making bare minimum 100 Dials\r\n        b. Hire More Setters\r\n            i. Your ads/marketing should produce 50 new leads/day for each setter you\r\n               have on your team. This will compound over time, as you will exhaust\r\n               leads by day 3-4 of their lifecycle. That means each setter will have a pool\r\n               of 150-200 leads to allow them to reach daily KPI. If you are producing\r\n               more than 50 new leads per setter, hire another setter.\r\n        `;\r\n    } else if (priorityConstraint === \"Organic Output Is Too Low\") {\r\n        return `\r\n        a. Your system is producing repeatable results, increase your outreach\r\n            i. If you are utilizing cold email, purchase a second sending domain to allow\r\n               for more sending. If you are doing social media outreach, add a VA to\r\n               your outreach to 2x output.\r\n        `;\r\n    } else if (priorityConstraint === \"Pickup-To-Set Rate Is Too Low\") {\r\n        return `\r\n        a. Refer to the \u201CStraight Line Of Evaluation\u201D to identify the problem areas for your\r\n           setters (Found in the appointment setting training)\r\n           i. Low pickup-to-set rate is most often caused by 1 of 3 areas of the set call:\r\n              Introduction, Gap, or Button Down\r\n           ii. Once you have identified the core constraint, implement training on that\r\n               ONE specific area. If no improvement is occurring, look into adjusting\r\n               your script.\r\n           iii. By the end of this evaluation, you should be able to identify the single\r\n                core constraint and begin testing solutions 1-by-1 until the constraint is\r\n                solved.\r\n        `;\r\n    } else if (priorityConstraint === \"Show Rate Is Too Low\") {\r\n        return `\r\n        a. Implement the $100 no-show fee\r\n            i. Ensure you and/or your setters are confident and convicted in\r\n               this process. The no-show fee is a filter, not a threat.\r\n        b. Implement The Pre-Call Video\r\n            i. This process will add an extra layer of excitement and urgency for your\r\n               prospects. Ensure you build a compelling and informative video.\r\n            ii. If you have your pre-call video implemented: \r\n                1. Add more context\r\n                    a. This could be context on the results you've provided for \r\n                       past customers/clients or context on how the system works\r\n                2. Make sure you make note of the no-show fee in the video\r\n        `;\r\n    } else if (priorityConstraint === \"Close Rate Is Too Low\") {\r\n        return `\r\n        a. Ensure prospects are watching pre-call video\r\n            i. Check your pre-call video watch rate. Low watch rate can cause a low\r\n               close rate. If this is the case, ensure your setters are buttoning down\r\n               watching the video when booking appointments.\r\n        b. Eliminate the common objections\r\n            i. Identify what the root cause is. Are your prospects saying \"i'm not\r\n               interested\", are they financially incapable of purchasing, are you getting\r\n               spouse/partner objections, etc? Each case will have a different solution.\r\n            ii. Once you've identified the root cause, reverse engineer the solution. For\r\n                example:\r\n                1. My close rate is 15%\r\n                2. 50% of my calls are \"i'm not interested\" objections\r\n                3. I'm going to test a new discovery in my close call\r\n                4. The new discovery will build a deeper gap\r\n                5. The deeper gap will build more desire\r\n                6. Test\r\n            iii. Or example two:\r\n                1. My close rate is 15%\r\n                2. 50% of my calls are financial DQ's\r\n                3. My setters are not qualifying in their calls\r\n                4. I'm going to test a tougher qualifying process in my setter script\r\n                5. I'm going to review calls on well qualified sets\r\n                6. The qualifications will filter our DQ's\r\n                7. Test\r\n    `;\r\n    } else if (priorityConstraint === \"DQ Rate Is Too High\") {\r\n        return `\r\n        a. Test new ads audiences\r\n            i. Your ads are optimizing for DQ'd leads, it's time to test new audiences\r\n        b. Add a clear call out in your headlines\r\n            ii. \"Attention: Busy parents making over $10k per month, etc\u2026\u2026\"\r\n        c. Implement an attribution software like HYROS, Cometly, or ThoughtMetric\r\n            iii. Attribution software will allow you to feed data back on qualified leads and\r\n            optimize your ads based on those prospects\r\n        `;\r\n    } else if (priorityConstraint === \"Organic Response Rate Is Too Low\") {\r\n        return `\r\n        a. Use a more friend-to-friend introduction\r\n            i. Your copy could be too sales focused. Don't sell your product in a DM /\r\n               Email, leave the selling for the phone\r\n            ii. Test new introductions based on the \"context based conversation\"\r\n                framework in the Hunting For Deals training.\r\n            iii. Be a service to those you reach out to, it should not feel as if you have\r\n                 anything to sell\r\n        b. Test new Call-To-Actions\r\n            i. Here's a short list of CTA's that have been winners for us, use your\r\n               creative freedom on these:\r\n                1. Let's hop on for a quick 7-10 minute chat, I'll show you how\r\n                   I [overcame constraint / fixed problem]\r\n                2. Can I steal you away for a 15-minute phone call tomorrow at 5 pm\r\n                   PST?\r\n                3. Is fixing [pain point] a high priority for you now?\r\n                4. Do I have your permission to share a personalized video on how I\r\n                   can help you with [goal]?\r\n        `;\r\n    } else if (priorityConstraint === \"Organic Set Rate Is Too Low\") {\r\n        return `\r\n        a. Ensure your response time is sub 5 minutes\r\n            i. People move quick, never let a response go cold\r\n        b. Offer more value\r\n            i. For example:\r\n                1. If your current CTA is something like this: \"Let's hop on a quick\r\n                   call\", try adding more value: \u201CI want to take 5-10 minutes and\r\n                   show you how I fixed [problem], give you some insight into how\r\n                   i've helped a friend [overcome issue, fix problem] and overall just\r\n                   be a resource for you, I know the pain you're going through so I'd\r\n                   be more than happy to help you fix it\u201D\r\n        `;\r\n    } else if (priorityConstraint === \"Cost Per Lead Is Too High\") {\r\n        return `\r\n        a. This is typically a reaction to a deeper root cause\r\n            i. Are your CPM's above $75?\r\n                1. Test new ad creatives\r\n                    a. Blend new videos and images into your campaigns\r\n                    b. Change the scenery of the videos, add motion or brighter\r\n                       environments\r\n                    c. Add transitions, keep the focal point moving\r\n                    d. Create curiosity with physical objects (juggling for\r\n                       example)\r\n            ii. Is your CTR below 1.5%?\r\n                a. Test new headlines\r\n                    i. Your headlines are not inciting enough curiosity,\r\n                       test 2-3 new ones\r\n                b. Add a mix of long-form and short-form copy\r\n                    i. If your copy is leaning one way or the other, add\r\n                    more of what you're not using. Tell more stories,\r\n                    use case studies, shorten your copy if you only use\r\n                    long form to only include the pre, main, and sub\r\n                    headline\r\n            iii. Is your opt-in rate below 10%?\r\n                1. Your funnel is too \u201Cnoisy\u201D - SIMPLIFY\r\n                    a. Limit the visuals in your funnel. Use no more than 3 colors,\r\n                       eliminate flashy or loud backgrounds, eliminate all buttons\r\n                       that distract from the goal - conversions\r\n                2. Shorten the opt-in form\r\n                    a. Your opt-in form should only include name, email, and\r\n                       phone number\r\n                3. Delete unnecessary copy\r\n                    a. Your funnel should include your headline, small amounts of\r\n                       social proof, and your opt-in buttons, no more\r\n                4. If you need more to reference, head to the \"Building The Funnel\"\r\n                   training and copy our template\r\n        `;\r\n    } else if (priorityConstraint === \"CPM's Are Too High\") {\r\n        return `\r\n        a. Test new ad creatives\r\n            i. Blend new videos and images into your campaigns\r\n            ii. Change the scenery of the videos, add motion or brighter environments\r\n            iii. Add transitions, keep the focal point moving\r\n            iv. Create curiosity with physical objects (juggling for example)\r\n        `;\r\n    } else if (priorityConstraint === \"CTR Is Too Low\") {\r\n        return `\r\n        a. Test new headlines\r\n            i. Your headlines are not inciting enough curiosity, test 2-3 new ones\r\n        b. Add a mix of long-form and short-form copy\r\n            i. If your copy is leaning one way or the other, add more of what you're not\r\n               using. Tell more stories, use case studies, shorten your copy if you only\r\n               use long form to only include the pre, main, and sub headline\r\n        `;\r\n    } else if (priorityConstraint === \"Opt-In Rate Is Too Low\") {\r\n        return `\r\n        a. Your funnel is too \u201Cnoisy\u201D - SIMPLIFY\r\n            i. Limit the visuals in your funnel. Use no more than 3 colors, eliminate\r\n               flashy or loud backgrounds, eliminate all buttons that distract from the\r\n               goal - conversions\r\n        b. Shorten the opt-in form\r\n            i. Your opt-in form should only include name, email, and phone number\r\n        c. Delete unnecessary copy\r\n            i. Your funnel should include your headline, small amounts of social proof,\r\n                and your opt-in buttons, no more\r\n        d. If you need more to reference, head to the \u201CBuilding The Funnel\u201D training and\r\n           copy our template\r\n        `;\r\n    } else if (priorityConstraint === \"PiF Rate Is Too Low\") {\r\n        return `\r\n        a. Tighten up your qualifications\r\n            i. We recommend 700+CS & $40k+ Annual Income for tier 1 qualifications\r\n        b. Ensure your setters are qualifying correctly\r\n            i. Review set calls to confirm you setters are screening deep enough\r\n                1. The difference between \"is your credit score above 700\" and \"So\r\n                [name], the last time you checked your credit, what was your\r\n                transunion score specifically? And when was that that you\r\n                checked?\" is detrimental to your qualification process\r\n        `;\r\n    } else if (priorityConstraint === \"Collection Rate Is Too Low\") {\r\n        return `\r\n        a. Get agreements signed before the funding process begins\r\n            i. If you have a high backout rate, we want to get more skin in the game\r\n               and concrete commitment bias from the prospect\r\n        b. Take small deposits before running through funding\r\n            i. Like above, we want to create a commitment bias. Take $500-1,000\r\n               deposits before attempting to run through funding. If you have to, take\r\n               even as small as $100 deposits.\r\n        `;\r\n    } else if (priorityConstraint === \"Return On Ad Spend Is Too Low\") {\r\n        return `\r\n        a. This is a reaction from a deeper root cause, let's identify\r\n            i. Check your other potential constraints and identify needle moving areas\r\n               that are underperformed in the business (is your set team\r\n               underperformed, is your close rate suffering, etc)\r\n            ii. Once identified, put 100% of your energy into solving the one core\r\n                constraint at hand\r\n            iii. Remember the principles of machine mindset: Identify through analysis,\r\n                 Hypothesize potential solutions, Test your theory, Evaluate results,\r\n                 Solution found or new theory tested until solved.\r\n        b. Raise your prices\r\n            i. If you are charging less than $5,800 for your offer, evaluate how to bring\r\n               more perceived value to your offer and increase your price. The same %\r\n               of people saying yes at $1,500-$2,500 will still say yes at $5,800, $9,800,\r\n               or more, it's how we position the offer.\r\n        `;\r\n    } else {\r\n        return \"Invalid Constraint\";\r\n    }\r\n}\r\n", "import { OpenAI } from \"../utils/openAI\";\r\nimport dotenv from \"dotenv\";\r\nimport fetch from \"node-fetch\";\r\nimport { getIndexNamePrompt, getPriorityDecisionPrompt, getAnswerPrompt } from \"./prompts\";\r\nimport jsonData from \"../scripts/docs.json\";\r\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\r\nimport { LLMChain, ConversationChain } from \"langchain/chains\";\r\nimport { BufferMemory } from \"langchain/memory\";\r\n\r\ndotenv.config();\r\n\r\nconst key = globalThis.window?.ENV.OPENAI_API_KEY ?? process.env.OPENAI_API_KEY ?? \"test_key\";\r\nconst inMemorySearchURL = globalThis.window?.ENV.IN_MEMORY_SEARCH_INDEX_URL ?? process.env.IN_MEMORY_SEARCH_INDEX_URL\r\n\r\nexport async function getIndexName(question: string): Promise<string | undefined> {\r\n  // Creating a new instance of the OpenAI class and passing in the OPENAI_KEY environment variable\r\n  let sanitizedQuestion: string = question.trim().replace(/\\n/g, \" \");\r\n\r\n  // Use the generateText method to generate text from the OpenAI API and passing the generated prompt, the model, and max token value\r\n  const chain = new LLMChain({\r\n    prompt: getIndexNamePrompt(jsonData),\r\n    llm: new ChatOpenAI({\r\n      openAIApiKey: key,\r\n      modelName: \"gpt-4\",\r\n      temperature: 0,\r\n      maxTokens: 2048\r\n    }),\r\n  });\r\n\r\n  const ans = await chain.call({\r\n    question: sanitizedQuestion,\r\n  });\r\n\r\n  const match = /Action:\\s*(.*)/.exec(ans.text);\r\n  const actionString = (match && match[1]) ?? '';\r\n\r\n  if (!jsonData.find(item => item.indexName === actionString)) {\r\n    return jsonData[0].indexName\r\n  }\r\n\r\n  return actionString;\r\n}\r\n\r\nexport async function getPriorityDecision(\r\n  kpiJsonData: Record<string, number>\r\n): Promise<{ high_constraint: string; other_constraints: string[] } | undefined> {\r\n  // Create chain and set LLM options\r\n  const chain = new LLMChain({\r\n    prompt: getPriorityDecisionPrompt(kpiJsonData),\r\n    llm: new ChatOpenAI({\r\n      openAIApiKey: key,\r\n      modelName: \"gpt-4\",\r\n      temperature: 0,\r\n      maxTokens: 2048,\r\n      streaming: true,\r\n      callbacks: [\r\n        {\r\n          handleLLMNewToken(token) {\r\n            process.stdout.write(token);\r\n          },\r\n        },\r\n      ],\r\n    }),\r\n  });\r\n  const ans = await chain.call({\r\n    input: \"Below is the answer you have written based on this while adhering to all the guidelines I gave you:\",\r\n  });\r\n  console.log(ans);\r\n  console.log(ans.response);\r\n  if (ans) return JSON.parse(ans.response);\r\n  else return undefined;\r\n}\r\n\r\nexport async function getContextFromIndex(question: string, indexing: string): Promise<any[] | undefined> {\r\n  let url = inMemorySearchURL + \"/api/match\";\r\n  const res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      sentence: question,\r\n      indexName: indexing,\r\n      neighbors: process.env.NN || 1,\r\n    }),\r\n  });\r\n  return res.json();\r\n}\r\n\r\nexport async function getAnswer(\r\n  context: any[],\r\n  question: string,\r\n  priorityConstraint: string,\r\n  actionSteps: string\r\n): Promise<string | undefined> {\r\n  // Use the generateText method to generate text from the OpenAI API and passing the generated prompt, the model, and max token value\r\n  const chain = new ConversationChain({\r\n    memory: new BufferMemory({\r\n      returnMessages: true,\r\n      memoryKey: \"history\",\r\n    }),\r\n    prompt: getAnswerPrompt(context, priorityConstraint, actionSteps),\r\n    llm: new ChatOpenAI({\r\n      openAIApiKey: key,\r\n      modelName: \"gpt-3.5-turbo\",\r\n      temperature: 0,\r\n      maxTokens: 2048, // SET A PRE-DETERMINED LENGTH BEFORE COMPLETION CUTS OFF\r\n      streaming: true,\r\n      callbacks: [\r\n        {\r\n          handleLLMNewToken(token) {\r\n            console.log(token)\r\n          },\r\n        },\r\n      ],\r\n    }),\r\n  });\r\n\r\n  const ans = await chain.call({\r\n    input: question,\r\n  });\r\n\r\n  console.log(ans.response);\r\n\r\n  return ans.response;\r\n}\r\n", "import {\r\n  SystemMessagePromptTemplate,\r\n  HumanMessagePromptTemplate,\r\n  ChatPromptTemplate,\r\n  MessagesPlaceholder,\r\n} from \"langchain/prompts\";\r\n\r\nexport function getIndexNamePrompt(jsonData: any[]) {\r\n  let promptString = \"Answer the following questions as best you can. You have access to the following tools:\";\r\n  let indexes = \"\";\r\n  for (let index in jsonData) {\r\n    const { indexName, description } = jsonData[index];\r\n    promptString += `\\n\\n${indexName}: ${description}`;\r\n    indexes += indexName + \",\";\r\n  }\r\n  indexes = indexes.slice(0, -1);\r\n  promptString +=\r\n    `\\n\\nUse the following format in your response:` +\r\n    `\\nQuestion: the input question you must answer` +\r\n    `\\nThought: you should always think about what to do` +\r\n    `\\nAction: the action to take, should be one of [${indexes}]` +\r\n    `\\nNow respond with the only Action:` +\r\n    `\\nBegin!` +\r\n    `\\nQuestion: {question}` +\r\n    `\\nThought:.`;\r\n\r\n  return ChatPromptTemplate.fromPromptMessages([\r\n    SystemMessagePromptTemplate.fromTemplate(\"\"),\r\n    HumanMessagePromptTemplate.fromTemplate(promptString),\r\n  ]);\r\n}\r\n\r\nexport function getPriorityDecisionPrompt(kpiJsonData: Record<string, number>) {\r\n  return ChatPromptTemplate.fromPromptMessages([\r\n    SystemMessagePromptTemplate.fromTemplate(`Your job is now to act as my business analyst. I'm going to provide you with a set of current metrics in the business, you are going to evaluate the metrics given with the objective of finding constraints and then identify the #1 focus point based on the order of priority in the list I provide.\r\n            \r\n    Each category has a threshold of what is considered a constraint.\r\n        \r\n    The Metrics You Are Given:\r\n    Contacted Leads - ${kpiJsonData[\"Contacted Leads\"]}\r\n    Responses - ${kpiJsonData[\"Responses\"]}\r\n    Appointments Set - ${kpiJsonData[\"Appts Set\"]}\r\n    CPM - ${kpiJsonData[\"CPM\"]}\r\n    CTR - ${kpiJsonData[\"CTR\"]}\r\n    Opt-In Rate - ${kpiJsonData[\"Opt-in Rate\"]}\r\n    Ad Spend - ${kpiJsonData[\"Ad Spend\"]}\r\n    Leads - ${kpiJsonData[\"Leads\"]}\r\n    Dials - ${kpiJsonData[\"Dials\"]}\r\n    Pickups - ${kpiJsonData[\"Pickups\"]}\r\n    Sets - ${kpiJsonData[\"Sets\"]}\r\n    DQ's - ${kpiJsonData[\"DQ's\"]}\r\n    Shows - ${kpiJsonData[\"Shows\"]}\r\n    Closes - ${kpiJsonData[\"Closes\"]}\r\n    PiF's - ${kpiJsonData[\"PIF's\"]}\r\n    Pay Plans - ${kpiJsonData[\"Pay Plans\"]}\r\n    Cash Collected - ${kpiJsonData[\"Cash\"]}\r\n    \r\n    Based on the inputs above, discover constraints based on the following criteria of each\r\n    category:\r\n    \r\n    Category: Organic Output\r\n    If \u201Cresponses\u201D is more than 10% of the value given for \u201Ccontacted leads\u201D AND\r\n    \u201Cappointments set\u201D is more than 30% of the value given for \u201Cresponses\u201D AND \u201CContacted\r\n    Leads\u201D is less than \u201C250\u201D rule as Constraint\r\n    If \u201CContacted Leads\u201D is 0, do not evaluate category \u201COrganic Output\u201D\r\n    \r\n    Category: Organic Response Rate\r\n    If \u201Cresponses\u201D is less than 10% of the value of \u201Ccontacted leads\u201D rule as Constraint\r\n    \r\n    Category: Organic Set Rate-\r\n    If \u201Cappointments set\u201D is less than 30% of the value of \u201Cresponses\u201D rule as Constraint\r\n    \r\n    Category: CPM's\r\n    If \u201CCPM\u201D is more than $100 rule as Constraint\r\n    \r\n    Category: CTR\r\n    If \u201CCTR\u201D is less than 1.5% rule as Constraint\r\n    \r\n    Category: Opt-In Rate\r\n    If \u201COpt-In Rate\u201D is less than 10% rule as Constraint\r\n    \r\n    Category: Setter Output\r\n    If \u201CDials\u201D is less than 200% of \u201CLeads\u201D, rule as Constraint\r\n    \r\n    Category: Pickup-To-Set Rate\r\n    If \u201CSets\u201D is less than 10% of \u201Cpickups\u201D, rule as Constraint\r\n    \r\n    Category: DQ Rate\r\n    If \u201CDQ's\u201D is more than 30% of the value of \u201Cpickups\u201D, rule as Constraint\r\n    \r\n    Category: Show Rate\r\n    If \u201CShows\u201D is less than 70% of the value give for \u201Csets\u201D, rule as constraint\r\n    \r\n    Category: Close Rate\r\n    If \u201CCloses\u201D is less than 25% of the value given for \u201Cshows\u201D, rule as constraint\r\n    \r\n    Category: PiF Rate\r\n    If \u201CPiF's\u201D is less than 30% of the value given for \u201Ccloses\u201D, rule as constraint\r\n    \r\n    Category: Collection Rate\r\n    If \u201CPiF's\u201D PLUS \u201CPay Plans\u201D is less than 75% of the value given for \u201Ccloses\u201D, rule as\r\n    constraint\r\n    \r\n    Category: Return On Ad Spend\r\n    If \u201CCash Collected\u201D is not equal to or greater than the value given for \u201Cad spend\u201D, rule as\r\n    constraint\r\n    \r\n    Category: Cost Per Lead\r\n    If \u201CAd Spend\u201D divided by the value of \u201Cleads\u201D is more than $30, rule as constraint\r\n    \r\n    The following is the list of categories in order of importance:\r\n    1. Setter Output Is Too Low\r\n    2. Organic Output Is Too Low\r\n    3. Pickup-To-Set Rate Is Too Low\r\n    4. Show Rate Is Too Low\r\n    5. Close Rate Is Too Low\r\n    6. DQ Rate Is Too High\r\n    7. Organic Response Rate Is Too Low\r\n    8. Organic Set Rate Is Too Low\r\n    9. Cost Per Lead Is Too High\r\n    10. CPM's Are Too High\r\n    11. CTR Is Too Low\r\n    12. Opt-In Rate Is Too Low\r\n    13. PiF Rate Is Too Low\r\n    14. Collection Rate Is Too Low\r\n    15. Return On Ad Spend Is Too Low\r\n    \r\n    Now respond with the following message only customizing the areas in the following format:\r\n    {\r\n        \"high_constraint\": [Your #1 Constraint To Solve Right Now Is Highest Numbered Constraint Identified],\r\n        \"other_constraints\": [List Of Other Identified Constraints In Order Of Importance In Array Form]\r\n    }`),\r\n    HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\r\n  ]);\r\n}\r\n\r\nexport function getAnswerPrompt(context: any[], priorityConstraint: string, actionSteps: string) {\r\n  let totalContext = \"\";\r\n  // Transfer context from {question,answer} => string\r\n  context.forEach(({ question }) => {\r\n    totalContext += `\\n ${question}`;\r\n  });\r\n\r\n  return ChatPromptTemplate.fromPromptMessages([\r\n    SystemMessagePromptTemplate.fromTemplate(\r\n      `you are a hyper emotionally intelligent ai. Your client is a business owner. Your ONE job is to keep the client focused on their highest priority constraint:\r\n        ${priorityConstraint}\r\n        \r\n        If the client asks you a question, answer it using this context:\r\n        \r\n        BEGINNING OF CONTEXT\r\n        ${totalContext}\r\n        END OF CONTEXT\r\n\r\n        Clients often ask questions unrelated to the highest priority constraint. In your response to the question, after answering their main question with emotional intelligence, ALWAYS make sure to mention the action steps for the highest priority constraint:\r\n        \r\n        ${actionSteps}\r\n\r\n        The client will now say something about the constraints above or the action steps or ask you questions - respond in order to be in full alignment with the instructions.`\r\n    ),\r\n    new MessagesPlaceholder(\"history\"),\r\n    HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\r\n  ]);\r\n}\r\n", "[\r\n  {\r\n    \"path\": \"docs/Section 1.docx\",\r\n    \"indexName\": \"airu-welcome-section-qa\",\r\n    \"description\": \"AirU Welcome Section QA - useful for when you need to ask questions about Air or getting started with Air\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Section 2.docx\",\r\n    \"indexName\": \"airu-offer-section-qa\",\r\n    \"description\": \"AirU Offer Section QA - useful for when you need to ask questions about creating irresistible offers and scalable fulfillment.\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Section 4.docx\",\r\n    \"indexName\": \"airu-midas-section-qa\",\r\n    \"description\": \"AirU Midas Section QA - useful for when you need to ask questions about Air's Midas fintech product and the funding process\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Section 5.docx\",\r\n    \"indexName\": \"airu-precall-video-section-qa\",\r\n    \"description\": \"AirU Precall Video Section QA - useful for when you need to ask questions about creating appointment pre-call videos.\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Section 6.docx\",\r\n    \"indexName\": \"airu-appoint-booking-section-qa\",\r\n    \"description\": \"AirU Appointment Booking Section QA - useful for when you need to ask questions about appointment booking, setting, outbound dialing, sales scripts, sms/email automations, and the set team in general.\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Section 7.docx\",\r\n    \"indexName\": \"airu-traffic-section-qa\",\r\n    \"description\": \"AirU Traffic Section QA - useful for when you need to ask questions about traffic and leads, whether it be paid ads, organic methods, affiliates, or referrals\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Section 8.docx\",\r\n    \"indexName\": \"airu-scaling-sales-teams-section-qa\",\r\n    \"description\": \"AirU Scaling Sales Teams Section QA - useful for when you need to ask questions about recruiting, hiring, and retaining sales rep talent.\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Section 9.docx\",\r\n    \"indexName\": \"airu-managing-sales-teams-section-qa\",\r\n    \"description\": \"AirU Managing Sales Teams Section QA - useful for when you need to ask questions about managing sales teams, meetings, setter and closer projections, amd setter, closer, leadership daily SOPs.\",\r\n    \"isUsed\": true\r\n  },\r\n  {\r\n    \"path\": \"docs/Arbitrage Services - Minicourse.docx\",\r\n    \"indexName\": \"airu-arbitrage-section-qa\",\r\n    \"description\": \"AirU Arbitrage Section QA - useful for when you need to ask questions about arbitraging fulfillment and creating a back-end for your business even if you are starting from scratch by using other people's products and services.\",\r\n    \"isUsed\": true\r\n  }\r\n]", "import { BUSINESS_STAT_LIST } from \"~/constants/data\";\r\nimport type { StatType, StatsForm } from \"~/interfaces\";\r\n\r\n// Convert business stats to priority list request type\r\nexport const formatPriorityRequest = (newBusinessStats: Array<any>) => {\r\n  let kpiData: Array<any> = [];\r\n  let requestData: Record<string, number> = kpiData\r\n    .concat(...newBusinessStats.map((item) => item.kpiList))\r\n    .map((item) => ({\r\n      [item.title]: item.value ?? 0,\r\n    }))\r\n    .reduce((acc, curr: any) => {\r\n      const key = Object.keys(curr)[0];\r\n      return { ...acc, [key]: curr[key] };\r\n    }, {} as Record<string, number>);\r\n\r\n  return requestData;\r\n};\r\n\r\n// Get business stats to display from stats form\r\nexport const getStatsByForm = (statsForm: any) => {\r\n  return BUSINESS_STAT_LIST.map((item) => {\r\n    const newKpiList = item.kpiList.map((kpi) => ({ ...kpi, value: statsForm[kpi.id] }));\r\n    return {\r\n      title: item.title,\r\n      kpiList: newKpiList,\r\n    };\r\n  });\r\n};\r\n\r\n// Get form data from business stats\r\nexport const getFormFromStats = (businessStats: Array<StatType>): StatsForm => {\r\n  let statsForm: Array<any> = [];\r\n  return statsForm\r\n    .concat(...businessStats.map((item: StatType) => item.kpiList))\r\n    .map((item) => ({\r\n      [item.id]: item.value ?? 0,\r\n    }))\r\n    .reduce((acc, curr: any) => {\r\n      const key = Object.keys(curr)[0];\r\n      return { ...acc, [key]: curr[key] };\r\n    }, {} as StatsForm);\r\n};\r\n\r\n// Get the string to display in chatboard from priority list\r\nexport const priorityListToString = (result: any) => {\r\n  return (\r\n    \"The following is the priority list.\\n\" +\r\n    [result?.high_constraint, ...(result?.other_constraints ?? [])]\r\n      .map((item: any, index) => `${index + 1}. ${item}`)\r\n      .join(\"\\n\")\r\n  );\r\n};\r\n\r\n// Date formatter for chat time\r\nexport const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\r\n  hour: \"numeric\",\r\n  minute: \"numeric\",\r\n  hour12: false,\r\n});\r\n\r\n// YYYY/mm/dd hh:m:sec\r\nexport const getDateString = (m: Date) => {\r\n  var dateString =\r\n    m.getUTCFullYear() + \"/\" +\r\n    (\"0\" + (m.getUTCMonth()+1)).slice(-2) + \"/\" +\r\n    (\"0\" + m.getUTCDate()).slice(-2) + \" \" +\r\n    (\"0\" + m.getUTCHours()).slice(-2) + \":\" +\r\n    (\"0\" + m.getUTCMinutes()).slice(-2) + \":\" +\r\n    (\"0\" + m.getUTCSeconds()).slice(-2);\r\n  return dateString\r\n}\r\n\r\n// Scroll to the end when the new chat item added\r\nexport const scrollDownToBottom = (elementId: string) => {\r\n  setTimeout(() => {\r\n    const chatElement = document.getElementById(elementId);\r\n    if (chatElement) {\r\n      chatElement.scroll({\r\n        top: chatElement.scrollHeight,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }, 100);\r\n};\r\n", "export default {'entry':{'module':'/build/entry.client-IPO2AE3W.js','imports':['/build/_shared/chunk-AFGFZWVG.js','/build/_shared/chunk-WL3DML2U.js','/build/_shared/chunk-TBYAOQAY.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-HLEJ53EJ.js','imports':['/build/_shared/chunk-7TIGRIB6.js','/build/_shared/chunk-XPYI74BT.js','/build/_shared/chunk-XC33FZEM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-XPMEFVOE.js','imports':['/build/_shared/chunk-LYUUNK2W.js','/build/_shared/chunk-CNKCBHKT.js','/build/_shared/chunk-2LW3IYTX.js','/build/_shared/chunk-B5QESS7Z.js','/build/_shared/chunk-CYWDPCZA.js','/build/_shared/chunk-OMSTDH4X.js','/build/_shared/chunk-PKQ42YAR.js','/build/_shared/chunk-4ZWVQ3RZ.js','/build/_shared/chunk-YJR56EL7.js','/build/_shared/chunk-X7D2EF6O.js','/build/_shared/chunk-IPFNLG6H.js','/build/_shared/chunk-CI5X6M7G.js','/build/_shared/chunk-VD53FOKT.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in/$':{'id':'routes/sign-in/$','parentId':'root','path':'sign-in/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in/$-XX62MBVH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/$':{'id':'routes/sign-up/$','parentId':'root','path':'sign-up/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/$-PGRYBU46.js','imports':['/build/_shared/chunk-VD53FOKT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/sso-callback':{'id':'routes/sign-up/sso-callback','parentId':'root','path':'sign-up/sso-callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/sso-callback-CTKQTQSP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-demo':{'id':'routes/ssr-demo','parentId':'root','path':'ssr-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-demo-JNO2BWNJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-user-demo':{'id':'routes/ssr-user-demo','parentId':'root','path':'ssr-user-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-user-demo-Q4UXCK3D.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/$':{'id':'routes/user/$','parentId':'root','path':'user/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/$-ACORQTYS.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'version':'61cc16b0','hmr':undefined,'url':'/build/manifest-61CC16B0.js'};", "\nimport * as entryServer from \"D:\\\\Development\\\\Work\\\\2023-06-09-business-stats\\\\sherlock\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\sign-up\\\\sso-callback.tsx\";\nimport * as route2 from \"./routes\\\\ssr-user-demo.tsx\";\nimport * as route3 from \"./routes\\\\sign-in\\\\$.tsx\";\nimport * as route4 from \"./routes\\\\sign-up\\\\$.tsx\";\nimport * as route5 from \"./routes\\\\ssr-demo.tsx\";\nimport * as route6 from \"./routes\\\\user\\\\$.tsx\";\nimport * as route7 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":false,\"v2_meta\":false,\"v2_normalizeFormMethod\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/sign-up/sso-callback\": {\n      id: \"routes/sign-up/sso-callback\",\n      parentId: \"root\",\n      path: \"sign-up/sso-callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/ssr-user-demo\": {\n      id: \"routes/ssr-user-demo\",\n      parentId: \"root\",\n      path: \"ssr-user-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/sign-in/$\": {\n      id: \"routes/sign-in/$\",\n      parentId: \"root\",\n      path: \"sign-in/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/sign-up/$\": {\n      id: \"routes/sign-up/$\",\n      parentId: \"root\",\n      path: \"sign-up/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/ssr-demo\": {\n      id: \"routes/ssr-demo\",\n      parentId: \"root\",\n      path: \"ssr-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/user/$\": {\n      id: \"routes/user/$\",\n      parentId: \"root\",\n      path: \"user/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_remix", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "_a", "sso_callback_default", "links", "import_react", "import_remix", "import_jsx_dev_runtime", "links", "sso_callback_default", "loader", "import_react", "import_ssr", "import_jsx_dev_runtime", "links", "import_remix", "import_jsx_dev_runtime", "links", "__exports", "links", "import_react", "import_remix", "import_jsx_dev_runtime", "links", "_a", "PhoneInput", "SsrDemoPage", "loader", "import_node", "import_react", "import_remix", "import_ssr", "import_jsx_dev_runtime", "__exports", "import_remix", "import_jsx_dev_runtime", "links", "loader", "meta", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "key", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "TextareaAutosize", "import_bs", "import_jsx_dev_runtime", "ReactModal", "import_react", "import_jsx_dev_runtime", "import_react", "import_react_step_builder", "import_bs", "import_jsx_dev_runtime", "import_react", "import_bs", "dotenv", "_a", "fetch", "newAxios", "import_jsx_dev_runtime", "key", "import_bs", "import_ssr", "import_react", "import_jsx_dev_runtime", "loader", "links", "meta", "priorityList", "chatList", "Slider", "__exports"]
}
